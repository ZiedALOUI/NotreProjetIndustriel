/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import config.ConfigChart;
import data.Chart;
import view.Observateur;

/**
 *  Fenêtre permettant de configurer les differents charts affichés
 * @author Wouaip
 */
public class ConfWindow extends javax.swing.JFrame{

    /**
     * Contient la liste de toutes les fenêtres de configuration
     */
    private ArrayList<ConfChartWindow> confChartWindowList;
    /*
    * List de tout les configcharts
    */
    private ArrayList<ConfigChart> configList;
    
    /**
     * Le père de ConfWindow
     */
    private Observateur observateur;
    /**
     * Constructeur 
     * @param observateur le pere de la fenetre
     */
    public ConfWindow(Observateur observateur) {
        initComponents();
        this.observateur = observateur;
        configList = new ArrayList<>();
        confChartWindowList = new ArrayList<>();
        confChartPanel.setLayout(new BoxLayout(confChartPanel, BoxLayout.Y_AXIS));
        confChartPanel.setName("confChartPanel");
        
        
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooserDialog = new javax.swing.JDialog();
        confFileChooser = new javax.swing.JFileChooser();
        importPanel = new javax.swing.JPanel();
        confFilePathTextField = new javax.swing.JTextField();
        importButton = new javax.swing.JButton();
        plusButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        plusPanel = new javax.swing.JPanel();
        confChartPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();

        javax.swing.GroupLayout fileChooserDialogLayout = new javax.swing.GroupLayout(fileChooserDialog.getContentPane());
        fileChooserDialog.getContentPane().setLayout(fileChooserDialogLayout);
        fileChooserDialogLayout.setHorizontalGroup(
            fileChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(confFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
        );
        fileChooserDialogLayout.setVerticalGroup(
            fileChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(confFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        importPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        importButton.setText("Importer");
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout importPanelLayout = new javax.swing.GroupLayout(importPanel);
        importPanel.setLayout(importPanelLayout);
        importPanelLayout.setHorizontalGroup(
            importPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importPanelLayout.createSequentialGroup()
                .addComponent(confFilePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(importButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        importPanelLayout.setVerticalGroup(
            importPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, importPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(importPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confFilePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(importButton))
                .addContainerGap())
        );

        plusButton.setText("+");
        plusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout confChartPanelLayout = new javax.swing.GroupLayout(confChartPanel);
        confChartPanel.setLayout(confChartPanelLayout);
        confChartPanelLayout.setHorizontalGroup(
            confChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 475, Short.MAX_VALUE)
        );
        confChartPanelLayout.setVerticalGroup(
            confChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 267, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout plusPanelLayout = new javax.swing.GroupLayout(plusPanel);
        plusPanel.setLayout(plusPanelLayout);
        plusPanelLayout.setHorizontalGroup(
            plusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(confChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        plusPanelLayout.setVerticalGroup(
            plusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, plusPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confChartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(plusPanel);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        exportButton.setText("Exporter");

        CancelButton.setText("Annuler");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(exportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(exportButton)
                    .addComponent(CancelButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(importPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(plusButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(plusButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(importPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Au clique de bouton d'import, affiche une fenetre de choix de fichier
     * @param evt 
     */
    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
       int returnVal = confFileChooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String chemin = confFileChooser.getSelectedFile().getAbsolutePath();
            confFilePathTextField.setText(chemin);
        } 
    
    }//GEN-LAST:event_importButtonActionPerformed


    
/**
 * Permet d'ajouter un nouveau chart
 * @param evt 
 */
    private void plusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButtonActionPerformed
        
        ConfChartWindow confchartWin = new ConfChartWindow(confChartPanel,confChartWindowList.size()+1);
        confchartWin.setName("confChartWin");
        confChartPanel.add(confchartWin );
        confChartWindowList.add(confchartWin);
        
    //    confChartPanel.setSize(confChartPanel.getWidth(),(confChartPanel.getHeight()+100));
        this.revalidate();
    }//GEN-LAST:event_plusButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        boolean success = true;
        String chartIndFailed = "";
        for(ConfChartWindow tmpCCW : confChartWindowList)
        {
            //Si la fenêtre n'a pas été supprimée
            if(!tmpCCW.isDeleted())
            {
                ConfigChart tmpCC = tmpCCW.getChart();
                //Si la creation d'un chart n'a pas réussi
                if(tmpCC == null)
                {
                    success = false;
                    chartIndFailed += " " + tmpCCW.getIndice();

                } else
                {
                    configList.add(tmpCC);

                }
            }
         
           
                
        }
        
        if(!success)
        {
            JOptionPane.showMessageDialog(this,"Mauvaise saisie pour les Charts "+chartIndFailed +".","Attention",JOptionPane.WARNING_MESSAGE);

        }
        else{
            ArrayList<Chart> chartTab = new ArrayList<>();
            for(ConfigChart tmpCC : configList)
            {
                Chart tmpChart = new Chart(observateur, tmpCC);
                chartTab.add(tmpChart);
                
                observateur.setCharts(chartTab);
                
                 System.out.println("view.ConfWindow.okButtonActionPerformed()");
                 
                this.setVisible(false);
                observateur.displayAllCharts();
            }
        }
    }//GEN-LAST:event_okButtonActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JPanel confChartPanel;
    private javax.swing.JFileChooser confFileChooser;
    private javax.swing.JTextField confFilePathTextField;
    private javax.swing.JButton exportButton;
    private javax.swing.JDialog fileChooserDialog;
    private javax.swing.JButton importButton;
    private javax.swing.JPanel importPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JButton plusButton;
    private javax.swing.JPanel plusPanel;
    // End of variables declaration//GEN-END:variables

 }
