/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import config.ConfigChart;
import data.Chart;
import data.DataListener;
import data.DataTab;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JDialog;
import org.jfree.chart.ChartPanel;
import xml.XmlReaderWriter;

/**
 *
 * @author Wouaip
 */
public class Observateur extends javax.swing.JFrame {

    static XmlReaderWriter xmlReaderWriter = new XmlReaderWriter();
    static DataListener dataListener = new DataListener();

    private ConfWindow confWindow;
    protected DataTab[] dataTabs;
    protected ArrayList<Chart> charts;
    protected ConfigChart[] configCharts;
    
    /**
     * Creates new form Observateur
     */
    public Observateur() {
        initComponents();
        confWindow = new ConfWindow(this);

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        solveurPathTextField = new javax.swing.JTextField();
        solveurChoiceButton = new javax.swing.JButton();
        confPathTextField = new javax.swing.JTextField();
        confChoiceButton = new javax.swing.JButton();
        confButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        solveurChoiceButton.setText("Choix du solveur");

        confChoiceButton.setText("Choix de configuration");

        confButton.setText("Gear");
        confButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(solveurPathTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(solveurChoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(confPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(confChoiceButton, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(confButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(solveurPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(solveurChoiceButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confChoiceButton)
                    .addComponent(confButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setText("Go !");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton2)
                .addGap(0, 17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confButtonActionPerformed
       confWindow.setSize(1500, 1000);
       confWindow.setVisible(true);
    }//GEN-LAST:event_confButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Observateur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Observateur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Observateur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Observateur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Observateur().setVisible(true);
            }
        });
    }
    
    private ConfigChart[] lireXML(File file)
	/* Sp�cifications : Lit un ficher pour obtenir un COnfigChart[]
	* pr�-conditions : 
	* post-conditions : null si le fichier est vide ou n'existe pas */
	{
		return null;
	}
	
	public DataTab getDataTab(String label)
	/* Sp�cifications : Identifie un datatab par son label
	* pr�-conditions : �
	* post-conditions : null si le label n'est pas trouv� */
	{
		return null;
	}
        
        public void setCharts(ArrayList<Chart> charts)
        {
            this.charts = charts;
        }
	
        public void registerAllCharts()
        /* Specification : Demande a tous les charts de s'abonner au dataTab qui les intéressent
         *  Pre-conditions :
         * post-conditions : tous les charts sont abonnés
         */
        {
            for(Chart tmpChart : charts)
            {
                tmpChart.autoRegister();
            }
        }
	private void startEcoute()
	/* Sp�cifications : Lance l'�coute
	* pr�-conditions : �
	* post-conditions : � */
	{
		
	}
	
	protected void startSolver(String path, String[] args)
	/* Sp�cifications : lance l'ex�cution du solveur
	* pr�-conditions : l'�coute est lanc�e
	* post-conditions : path ne pointe pas vers un fichier: erreur */
	{
		
	}
	
	protected void stopSolver()
	/* Sp�cifications : Arrete l'ex�cution du solveur
	* pr�-conditions : Le solveur a �t� lanc�
	* post-conditions : S'il est en cours d'ex�cution, stoppe le solveur */
	{
		
	}
		
	protected void stop()
	/* Sp�cifications : Coupure g�n�rale
	* pr�-conditions : �
	* post-conditions : fermeture du logiciel et de toutes les d�pendances */
	{
		
	}

        
        //--TEST !! A SUPPRIMER SI COMMIT
        public void displayAllCharts()
        {
            
            for(Chart tmpChart : this.charts )
            {
                createDialog(tmpChart);
            }
        }
        
        //--TEST !! A SUPPRIMER SI COMMIT

        private static void createDialog(Chart myChart)
        {
             JDialog dialog = new JDialog();

                ChartPanel chartPanel = new ChartPanel(myChart.getChart());
                chartPanel.setPreferredSize(new java.awt.Dimension(500, 500));
                dialog.addWindowListener(new WindowAdapter() {
                    @Override
                    public void windowClosing(WindowEvent e) {
                      //JDialog dialog = (JDialog) e.getWindow();
                      System.exit(0);
                    }
                });
                dialog.setContentPane(chartPanel);
                dialog.setVisible(true);
                dialog.pack(); 
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confButton;
    private javax.swing.JButton confChoiceButton;
    private javax.swing.JTextField confPathTextField;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton solveurChoiceButton;
    private javax.swing.JTextField solveurPathTextField;
    // End of variables declaration//GEN-END:variables
}
